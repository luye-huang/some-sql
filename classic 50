-- 1
-- select 可以from多个表：逗号连接，可以视为每个select的乘机，每个select 需要用as赋值为变量值。主select选择的列注意防止列名冲突， 分select会造成相同列名重复出现，如下选择*不会出错

-- natural join 合并两表相同列。等价于inner join  on 加限定条件

-- select * from student join (select t1.sid, t1.score as s1, t2.score as s2 from (select * from sc where cid = '01') as t1, (select * from sc where cid = '02') as t2 where t1.sid = t2.sid and t1.score>t2.score)r on student.sid = r.sid


-- 1.1
-- left join 必须要配合on
-- select句当成表用要先括号 并起变量名 Every derived table must have its own alias
-- select * from ((select * from sc where cid = '01')t1 left join (select * from sc where cid = '02')t2 on t1.sid = t2.sid)


-- 1.2
-- ((select * from sc where cid = '01') natural join (select * from sc where cid = '02'))
-- select * from ((select * from sc where cid = '01')t1  join (select * from sc where cid = '02')t2 on t1.sid=t2.sid)

-- 1.3
-- select * from sc
-- select * from sc where sid not in (select sid from sc where cid = '02') and cid = '01'
-- select * from student natural join (select * from sc where sid not in (select sid from sc where cid = '02') and cid = '01')t1
-- select * from student join (select * from sc where sid not in (select sid from sc where cid = '02') and cid = '01')t1 on student.sid=t1.sid

-- 2
-- select sname, sid, average from student natural join (select avg(score) as average, sid from sc group by sid having average> 60) t1

-- 3
-- select * from student where sid in (select distinct sid from sc);
-- select distinct student.* from student, sc where student.sid = sc.sid

-- 4
-- select * from student natural join (select sid, count(cid) as courses, sum(score) as scoreSum from sc group by sid)t1 order by scoreSum desc

-- 5 
-- find_in_set 第二个参数必须是，分割的字符串
-- select * from teacher where find_in_set('李', tname)>0
-- select find_in_set('1', '1,234') /1  select find_in_set('1', '1234') /0

-- select * from teacher where locate('李', tname)>0
-- select * from teacher where instr(tname, '李')>0
-- select * from teacher where position('李' in tname)

-- 6
-- select * from (select sid from sc where cid in (select cid from course where tid in (select tid from Teacher where tname = '张三')))t1 natural join student

-- 7
-- set @courses = (select count(*) from course);
-- group by 中 不能选择没被类聚的列
-- select * from student where sid not in (select sid from sc group by sid having count(cid)>= @courses)

-- 8 
-- select * from student where sid in (select distinct sid from sc where cid in (select cid from sc where sid = '01')) and sid != 1

-- 9


-- 10 
-- where之前的derived table 需要括号
-- select sname from student where sid not in (select sid from sc where cid in (select cid from (select cid, tname from course natural join teacher)t1 where t1.tname = '张三'))

-- 11
-- select sid, sname, average from student natural join (select sid, avg(score) as average from (select sid, score from sc where score < 60)t1 group by sid having count(sid)>=2)t2

-- 12
-- select sname, t1.score, ssex from student natural join (select * from sc where score<60 and cid = '01')t1 order by score desc

-- 13
-- select * from  Student natural join (select * from sc natural join (select sid, avg(score) as average from sc group by sid)t1 order by t1.average)t2


-- 14
-- count,avg 等聚合函数接的column name 可以是汉字
-- select cname as '课程', t2.* from (select cid,  max(score) as '最高分', min(score) as '最低分', sum(及格)/count(*) as '及格率', sum(良)/count(*) as '良率', sum(优秀)/count(*) as '优秀率'  from (select cid, score, case when score>= 60 and score< 70 then 1 else 0 end as '及格', case when score>=70 and score< 80 then 1 else 0 end as '良', case when score>=90 then 1 else 0 end as '优秀' from sc)t1 group by cid)t2 natural join course

-- 15

-- group by, order by 接多个字段

-- select a.sid, a.cid, count(a.sid) as 排名 from sc a left join sc b on a.cid=b.cid and a.score<b.score  group by a.cid, a.sid order by a.cid, 排名
 
 
 -- 15.1
-- select a.cid, a.sid, case when count(a.sid) = 1 then count(a.sid) else count(a.sid)+1 end as 排名 from sc a left join sc b on a.cid = b.cid and a.score<b.score and a.sid!=b.sid group by a.cid, a.sid order by a.cid, 排名

-- 16
-- select @r:=@r+1 as 排名, b.* from (select a.sid,Student.sname, a.总分 from (select sid, sum(sc.score) as 总分 from sc group by sid) a natural join student order by a.总分 desc)b, (select @r :=0)c 

